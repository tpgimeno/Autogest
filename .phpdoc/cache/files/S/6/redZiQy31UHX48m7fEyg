1650932100
AwuilbDvXz%3A07585022fb930a4018ac702979730c66-77fdf9f757ef72acf3342ed5f8006e2a
s:7232:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDA6IlRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBDYXJib24gcGFja2FnZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTU4OiIoYykgQnJpYW4gTmVzYml0dCA8YnJpYW5AbmVzYm90LmNvbT4KCkZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCmZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiNzdmZGY5Zjc1N2VmNzJhY2YzMzQyZWQ1ZjgwMDZlMmEiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czo2OiJicy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo0MzoidmVuZG9yL25lc2JvdC9jYXJib24vc3JjL0NhcmJvbi9MYW5nL2JzLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MzQ0NzoiPD9waHAKCi8qKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQ2FyYm9uIHBhY2thZ2UuCiAqCiAqIChjKSBCcmlhbiBOZXNiaXR0IDxicmlhbkBuZXNib3QuY29tPgogKgogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4KICovCgovKgogKiBBdXRob3JzOgogKiAtIGJva2lkZWNrb25qYQogKiAtIEpvc2ggU29yZWYKICogLSBGcmFuw6dvaXMgQgogKiAtIHNoYWlzaGF2Z2FuZGhpMDUKICogLSBTZXJoYW4gQXBheWTEsW4KICogLSBKRCBJc2FhY2tzCiAqLwpyZXR1cm4gWwogICAgJ3llYXInID0+ICc6Y291bnQgZ29kaW5hfDpjb3VudCBnb2RpbmV8OmNvdW50IGdvZGluYScsCiAgICAneScgPT4gJzpjb3VudCBnb2RpbmF8OmNvdW50IGdvZGluZXw6Y291bnQgZ29kaW5hJywKICAgICdtb250aCcgPT4gJzpjb3VudCBtamVzZWN8OmNvdW50IG1qZXNlY2F8OmNvdW50IG1qZXNlY2knLAogICAgJ20nID0+ICc6Y291bnQgbWplc2VjfDpjb3VudCBtamVzZWNhfDpjb3VudCBtamVzZWNpJywKICAgICd3ZWVrJyA9PiAnOmNvdW50IHNlZG1pY2V8OmNvdW50IHNlZG1pY3V8OmNvdW50IHNlZG1pY2EnLAogICAgJ3cnID0+ICc6Y291bnQgc2VkbWljZXw6Y291bnQgc2VkbWljdXw6Y291bnQgc2VkbWljYScsCiAgICAnZGF5JyA9PiAnOmNvdW50IGRhbnw6Y291bnQgZGFuYXw6Y291bnQgZGFuYScsCiAgICAnZCcgPT4gJzpjb3VudCBkYW58OmNvdW50IGRhbmF8OmNvdW50IGRhbmEnLAogICAgJ2hvdXInID0+ICc6Y291bnQgc2F0fDpjb3VudCBzYXRhfDpjb3VudCBzYXRpJywKICAgICdoJyA9PiAnOmNvdW50IHNhdHw6Y291bnQgc2F0YXw6Y291bnQgc2F0aScsCiAgICAnbWludXRlJyA9PiAnOmNvdW50IG1pbnV0fDpjb3VudCBtaW51dGF8OmNvdW50IG1pbnV0YScsCiAgICAnbWluJyA9PiAnOmNvdW50IG1pbnV0fDpjb3VudCBtaW51dGF8OmNvdW50IG1pbnV0YScsCiAgICAnc2Vjb25kJyA9PiAnOmNvdW50IHNla3VuZHw6Y291bnQgc2VrdW5kYXw6Y291bnQgc2VrdW5kaScsCiAgICAncycgPT4gJzpjb3VudCBzZWt1bmR8OmNvdW50IHNla3VuZGF8OmNvdW50IHNla3VuZGknLAogICAgJ2FnbycgPT4gJ3ByaWplIDp0aW1lJywKICAgICdmcm9tX25vdycgPT4gJ3phIDp0aW1lJywKICAgICdhZnRlcicgPT4gJ25ha29uIDp0aW1lJywKICAgICdiZWZvcmUnID0+ICc6dGltZSByYW5pamUnLAogICAgJ2RpZmZfbm93JyA9PiAnc2FkYScsCiAgICAnZGlmZl90b2RheScgPT4gJ2RhbmFzJywKICAgICdkaWZmX3RvZGF5X3JlZ2V4cCcgPT4gJ2RhbmFzKD86XFxzK3UpPycsCiAgICAnZGlmZl95ZXN0ZXJkYXknID0+ICdqdcSNZXInLAogICAgJ2RpZmZfeWVzdGVyZGF5X3JlZ2V4cCcgPT4gJ2p1xI1lcig/Olxccyt1KT8nLAogICAgJ2RpZmZfdG9tb3Jyb3cnID0+ICdzdXRyYScsCiAgICAnZGlmZl90b21vcnJvd19yZWdleHAnID0+ICdzdXRyYSg/Olxccyt1KT8nLAogICAgJ2Zvcm1hdHMnID0+IFsKICAgICAgICAnTFQnID0+ICdIOm1tJywKICAgICAgICAnTFRTJyA9PiAnSDptbTpzcycsCiAgICAgICAgJ0wnID0+ICdERC5NTS5ZWVlZJywKICAgICAgICAnTEwnID0+ICdELiBNTU1NIFlZWVknLAogICAgICAgICdMTEwnID0+ICdELiBNTU1NIFlZWVkgSDptbScsCiAgICAgICAgJ0xMTEwnID0+ICdkZGRkLCBELiBNTU1NIFlZWVkgSDptbScsCiAgICBdLAogICAgJ2NhbGVuZGFyJyA9PiBbCiAgICAgICAgJ3NhbWVEYXknID0+ICdbZGFuYXMgdV0gTFQnLAogICAgICAgICduZXh0RGF5JyA9PiAnW3N1dHJhIHVdIExUJywKICAgICAgICAnbmV4dFdlZWsnID0+IGZ1bmN0aW9uIChcQ2FyYm9uXENhcmJvbkludGVyZmFjZSAkY3VycmVudCkgewogICAgICAgICAgICBzd2l0Y2ggKCRjdXJyZW50LT5kYXlPZldlZWspIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1t1XSBbbmVkamVsanVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3NyaWplZHVdIFt1XSBMVCc7CiAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gW3N1Ym90dV0gW3VdIExUJzsKICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbdV0gZGRkZCBbdV0gTFQnOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAnbGFzdERheScgPT4gJ1tqdcSNZXIgdV0gTFQnLAogICAgICAgICdsYXN0V2VlaycgPT4gZnVuY3Rpb24gKFxDYXJib25cQ2FyYm9uSW50ZXJmYWNlICRjdXJyZW50KSB7CiAgICAgICAgICAgIHN3aXRjaCAoJGN1cnJlbnQtPmRheU9mV2VlaykgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIHJldHVybiAnW3Byb8WhbHVdIGRkZGQgW3VdIExUJzsKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1twcm/FoWxlXSBbc3Vib3RlXSBbdV0gTFQnOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ1twcm/FoWxpXSBkZGRkIFt1XSBMVCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICdzYW1lRWxzZScgPT4gJ0wnLAogICAgXSwKICAgICdvcmRpbmFsJyA9PiAnOm51bWJlci4nLAogICAgJ21vbnRocycgPT4gWydqYW51YXInLCAnZmVicnVhcicsICdtYXJ0JywgJ2FwcmlsJywgJ21haicsICdqdW5pJywgJ2p1bGknLCAnYXVndXN0JywgJ3NlcHRlbWJhcicsICdva3RvYmFyJywgJ25vdmVtYmFyJywgJ2RlY2VtYmFyJ10sCiAgICAnbW9udGhzX3Nob3J0JyA9PiBbJ2phbi4nLCAnZmViLicsICdtYXIuJywgJ2Fwci4nLCAnbWFqLicsICdqdW4uJywgJ2p1bC4nLCAnYXVnLicsICdzZXAuJywgJ29rdC4nLCAnbm92LicsICdkZWMuJ10sCiAgICAnd2Vla2RheXMnID0+IFsnbmVkamVsamEnLCAncG9uZWRqZWxqYWsnLCAndXRvcmFrJywgJ3NyaWplZGEnLCAnxI1ldHZydGFrJywgJ3BldGFrJywgJ3N1Ym90YSddLAogICAgJ3dlZWtkYXlzX3Nob3J0JyA9PiBbJ25lZC4nLCAncG9uLicsICd1dG8uJywgJ3NyaS4nLCAnxI1ldC4nLCAncGV0LicsICdzdWIuJ10sCiAgICAnd2Vla2RheXNfbWluJyA9PiBbJ25lJywgJ3BvJywgJ3V0JywgJ3NyJywgJ8SNZScsICdwZScsICdzdSddLAogICAgJ2ZpcnN0X2RheV9vZl93ZWVrJyA9PiAxLAogICAgJ2RheV9vZl9maXJzdF93ZWVrX29mX3llYXInID0+IDEsCiAgICAnbGlzdCcgPT4gWycsICcsICcgaSAnXSwKICAgICdtZXJpZGllbScgPT4gWydwcmlqZXBvZG5lJywgJ3BvcG9kbmUnXSwKXTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";