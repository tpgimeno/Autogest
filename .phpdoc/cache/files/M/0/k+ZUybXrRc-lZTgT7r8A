1650932249
AwuilbDvXz%3A896092a8ca36770c9a523538da5f665e-327f0f7e27027b4b0d61af64341de830
s:7664:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjMyN2YwZjdlMjcwMjdiNGIwZDYxYWY2NDM0MWRlODMwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6Nzoid2ViLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjU2OiJ2ZW5kb3Ivc3ltZm9ueS9mcmFtZXdvcmstYnVuZGxlL1Jlc291cmNlcy9jb25maWcvd2ViLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDY0NToiPD9waHAKCi8qCiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBTeW1mb255IHBhY2thZ2UuCiAqCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyIDxmYWJpZW5Ac3ltZm9ueS5jb20+CiAqCiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3IHRoZSBMSUNFTlNFCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLgogKi8KCm5hbWVzcGFjZSBTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3I7Cgp1c2UgU3ltZm9ueVxCdW5kbGVcRnJhbWV3b3JrQnVuZGxlXENvbnRyb2xsZXJcQ29udHJvbGxlclJlc29sdmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxDb250cm9sbGVyXEFyZ3VtZW50UmVzb2x2ZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwS2VybmVsXENvbnRyb2xsZXJcQXJndW1lbnRSZXNvbHZlclxEZWZhdWx0VmFsdWVSZXNvbHZlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBLZXJuZWxcQ29udHJvbGxlclxBcmd1bWVudFJlc29sdmVyXFJlcXVlc3RBdHRyaWJ1dGVWYWx1ZVJlc29sdmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxDb250cm9sbGVyXEFyZ3VtZW50UmVzb2x2ZXJcUmVxdWVzdFZhbHVlUmVzb2x2ZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwS2VybmVsXENvbnRyb2xsZXJcQXJndW1lbnRSZXNvbHZlclxTZXJ2aWNlVmFsdWVSZXNvbHZlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBLZXJuZWxcQ29udHJvbGxlclxBcmd1bWVudFJlc29sdmVyXFNlc3Npb25WYWx1ZVJlc29sdmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxDb250cm9sbGVyXEFyZ3VtZW50UmVzb2x2ZXJcVmFyaWFkaWNWYWx1ZVJlc29sdmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxDb250cm9sbGVyXEVycm9yQ29udHJvbGxlcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBLZXJuZWxcQ29udHJvbGxlck1ldGFkYXRhXEFyZ3VtZW50TWV0YWRhdGFGYWN0b3J5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxFdmVudExpc3RlbmVyXERpc2FsbG93Um9ib3RzSW5kZXhpbmdMaXN0ZW5lcjsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEh0dHBLZXJuZWxcRXZlbnRMaXN0ZW5lclxFcnJvckxpc3RlbmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxFdmVudExpc3RlbmVyXExvY2FsZUxpc3RlbmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxFdmVudExpc3RlbmVyXFJlc3BvbnNlTGlzdGVuZXI7CnVzZSBTeW1mb255XENvbXBvbmVudFxIdHRwS2VybmVsXEV2ZW50TGlzdGVuZXJcU3RyZWFtZWRSZXNwb25zZUxpc3RlbmVyOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcSHR0cEtlcm5lbFxFdmVudExpc3RlbmVyXFZhbGlkYXRlUmVxdWVzdExpc3RlbmVyOwoKcmV0dXJuIHN0YXRpYyBmdW5jdGlvbiAoQ29udGFpbmVyQ29uZmlndXJhdG9yICRjb250YWluZXIpIHsKICAgICRjb250YWluZXItPnNlcnZpY2VzKCkKICAgICAgICAtPnNldCgnY29udHJvbGxlcl9yZXNvbHZlcicsIENvbnRyb2xsZXJSZXNvbHZlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdzZXJ2aWNlX2NvbnRhaW5lcicpLAogICAgICAgICAgICAgICAgc2VydmljZSgnbG9nZ2VyJyktPmlnbm9yZU9uSW52YWxpZCgpLAogICAgICAgICAgICBdKQogICAgICAgICAgICAtPnRhZygnbW9ub2xvZy5sb2dnZXInLCBbJ2NoYW5uZWwnID0+ICdyZXF1ZXN0J10pCgogICAgICAgIC0+c2V0KCdhcmd1bWVudF9tZXRhZGF0YV9mYWN0b3J5JywgQXJndW1lbnRNZXRhZGF0YUZhY3Rvcnk6OmNsYXNzKQoKICAgICAgICAtPnNldCgnYXJndW1lbnRfcmVzb2x2ZXInLCBBcmd1bWVudFJlc29sdmVyOjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ2FyZ3VtZW50X21ldGFkYXRhX2ZhY3RvcnknKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnYXJndW1lbnQgdmFsdWUgcmVzb2x2ZXJzJyksCiAgICAgICAgICAgIF0pCgogICAgICAgIC0+c2V0KCdhcmd1bWVudF9yZXNvbHZlci5yZXF1ZXN0X2F0dHJpYnV0ZScsIFJlcXVlc3RBdHRyaWJ1dGVWYWx1ZVJlc29sdmVyOjpjbGFzcykKICAgICAgICAgICAgLT50YWcoJ2NvbnRyb2xsZXIuYXJndW1lbnRfdmFsdWVfcmVzb2x2ZXInLCBbJ3ByaW9yaXR5JyA9PiAxMDBdKQoKICAgICAgICAtPnNldCgnYXJndW1lbnRfcmVzb2x2ZXIucmVxdWVzdCcsIFJlcXVlc3RWYWx1ZVJlc29sdmVyOjpjbGFzcykKICAgICAgICAgICAgLT50YWcoJ2NvbnRyb2xsZXIuYXJndW1lbnRfdmFsdWVfcmVzb2x2ZXInLCBbJ3ByaW9yaXR5JyA9PiA1MF0pCgogICAgICAgIC0+c2V0KCdhcmd1bWVudF9yZXNvbHZlci5zZXNzaW9uJywgU2Vzc2lvblZhbHVlUmVzb2x2ZXI6OmNsYXNzKQogICAgICAgICAgICAtPnRhZygnY29udHJvbGxlci5hcmd1bWVudF92YWx1ZV9yZXNvbHZlcicsIFsncHJpb3JpdHknID0+IDUwXSkKCiAgICAgICAgLT5zZXQoJ2FyZ3VtZW50X3Jlc29sdmVyLnNlcnZpY2UnLCBTZXJ2aWNlVmFsdWVSZXNvbHZlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ3NlcnZpY2UgbG9jYXRvciwgc2V0IGluIFJlZ2lzdGVyQ29udHJvbGxlckFyZ3VtZW50TG9jYXRvcnNQYXNzJyksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdjb250cm9sbGVyLmFyZ3VtZW50X3ZhbHVlX3Jlc29sdmVyJywgWydwcmlvcml0eScgPT4gLTUwXSkKCiAgICAgICAgLT5zZXQoJ2FyZ3VtZW50X3Jlc29sdmVyLmRlZmF1bHQnLCBEZWZhdWx0VmFsdWVSZXNvbHZlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+dGFnKCdjb250cm9sbGVyLmFyZ3VtZW50X3ZhbHVlX3Jlc29sdmVyJywgWydwcmlvcml0eScgPT4gLTEwMF0pCgogICAgICAgIC0+c2V0KCdhcmd1bWVudF9yZXNvbHZlci52YXJpYWRpYycsIFZhcmlhZGljVmFsdWVSZXNvbHZlcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+dGFnKCdjb250cm9sbGVyLmFyZ3VtZW50X3ZhbHVlX3Jlc29sdmVyJywgWydwcmlvcml0eScgPT4gLTE1MF0pCgogICAgICAgIC0+c2V0KCdyZXNwb25zZV9saXN0ZW5lcicsIFJlc3BvbnNlTGlzdGVuZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgcGFyYW0oJ2tlcm5lbC5jaGFyc2V0JyksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwuZXZlbnRfc3Vic2NyaWJlcicpCgogICAgICAgIC0+c2V0KCdzdHJlYW1lZF9yZXNwb25zZV9saXN0ZW5lcicsIFN0cmVhbWVkUmVzcG9uc2VMaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwuZXZlbnRfc3Vic2NyaWJlcicpCgogICAgICAgIC0+c2V0KCdsb2NhbGVfbGlzdGVuZXInLCBMb2NhbGVMaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdyZXF1ZXN0X3N0YWNrJyksCiAgICAgICAgICAgICAgICBwYXJhbSgna2VybmVsLmRlZmF1bHRfbG9jYWxlJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdyb3V0ZXInKS0+aWdub3JlT25JbnZhbGlkKCksCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwuZXZlbnRfc3Vic2NyaWJlcicpCgogICAgICAgIC0+c2V0KCd2YWxpZGF0ZV9yZXF1ZXN0X2xpc3RlbmVyJywgVmFsaWRhdGVSZXF1ZXN0TGlzdGVuZXI6OmNsYXNzKQogICAgICAgICAgICAtPnRhZygna2VybmVsLmV2ZW50X3N1YnNjcmliZXInKQoKICAgICAgICAtPnNldCgnZGlzYWxsb3dfc2VhcmNoX2VuZ2luZV9pbmRleF9yZXNwb25zZV9saXN0ZW5lcicsIERpc2FsbG93Um9ib3RzSW5kZXhpbmdMaXN0ZW5lcjo6Y2xhc3MpCiAgICAgICAgICAgIC0+dGFnKCdrZXJuZWwuZXZlbnRfc3Vic2NyaWJlcicpCgogICAgICAgIC0+c2V0KCdlcnJvcl9jb250cm9sbGVyJywgRXJyb3JDb250cm9sbGVyOjpjbGFzcykKICAgICAgICAgICAgLT5wdWJsaWMoKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZSgnaHR0cF9rZXJuZWwnKSwKICAgICAgICAgICAgICAgIHBhcmFtKCdrZXJuZWwuZXJyb3JfY29udHJvbGxlcicpLAogICAgICAgICAgICAgICAgc2VydmljZSgnZXJyb3JfcmVuZGVyZXInKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ2V4Y2VwdGlvbl9saXN0ZW5lcicsIEVycm9yTGlzdGVuZXI6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgcGFyYW0oJ2tlcm5lbC5lcnJvcl9jb250cm9sbGVyJyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdsb2dnZXInKS0+bnVsbE9uSW52YWxpZCgpLAogICAgICAgICAgICAgICAgcGFyYW0oJ2tlcm5lbC5kZWJ1ZycpLAogICAgICAgICAgICBdKQogICAgICAgICAgICAtPnRhZygna2VybmVsLmV2ZW50X3N1YnNjcmliZXInKQogICAgICAgICAgICAtPnRhZygnbW9ub2xvZy5sb2dnZXInLCBbJ2NoYW5uZWwnID0+ICdyZXF1ZXN0J10pCiAgICA7Cn07CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6NTg6IlxTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3IiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1ODoiXFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJDb25maWd1cmF0b3IiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";