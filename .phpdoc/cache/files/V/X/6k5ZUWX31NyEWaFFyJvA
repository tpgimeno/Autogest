1650932013
AwuilbDvXz%3A59e154edf8c23260d151d1ab3922177d-1c15422fbd4d84dec52067d02f490b91
s:61200:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjFjMTU0MjJmYmQ0ZDg0ZGVjNTIwNjdkMDJmNDkwYjkxIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6ODoiRmlsZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxMDA6InZlbmRvci9iaW4vLnBocHVuaXQvcGhwdW5pdC04LjMtMC92ZW5kb3IvcGhwdW5pdC9waHAtY29kZS1jb3ZlcmFnZS9zcmMvUmVwb3J0L0h0bWwvUmVuZGVyZXIvRmlsZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjE4OTIzOiI8P3BocCBkZWNsYXJlKHN0cmljdF90eXBlcz0xKTsKLyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIHBocC1jb2RlLWNvdmVyYWdlIHBhY2thZ2UuCiAqCiAqIChjKSBTZWJhc3RpYW4gQmVyZ21hbm4gPHNlYmFzdGlhbkBwaHB1bml0LmRlPgogKgogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4KICovCm5hbWVzcGFjZSBTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWw7Cgp1c2UgU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXE5vZGVcRmlsZSBhcyBGaWxlTm9kZTsKdXNlIFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxVdGlsOwoKLyoqCiAqIFJlbmRlcnMgYSBmaWxlIG5vZGUuCiAqLwpmaW5hbCBjbGFzcyBGaWxlIGV4dGVuZHMgUmVuZGVyZXIKewogICAgLyoqCiAgICAgKiBAdmFyIGludAogICAgICovCiAgICBwcml2YXRlICRodG1sU3BlY2lhbENoYXJzRmxhZ3MgPSBcRU5UX0NPTVBBVCB8IFxFTlRfSFRNTDQwMSB8IFxFTlRfU1VCU1RJVFVURTsKCiAgICAvKioKICAgICAqIEB0aHJvd3MgXFJ1bnRpbWVFeGNlcHRpb24KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHJlbmRlcihGaWxlTm9kZSAkbm9kZSwgc3RyaW5nICRmaWxlKTogdm9pZAogICAgewogICAgICAgICR0ZW1wbGF0ZSA9IG5ldyBcVGV4dF9UZW1wbGF0ZSgkdGhpcy0+dGVtcGxhdGVQYXRoIC4gJ2ZpbGUuaHRtbCcsICd7eycsICd9fScpOwoKICAgICAgICAkdGVtcGxhdGUtPnNldFZhcigKICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiAkdGhpcy0+cmVuZGVySXRlbXMoJG5vZGUpLAogICAgICAgICAgICAgICAgJ2xpbmVzJyA9PiAkdGhpcy0+cmVuZGVyU291cmNlKCRub2RlKSwKICAgICAgICAgICAgXQogICAgICAgICk7CgogICAgICAgICR0aGlzLT5zZXRDb21tb25UZW1wbGF0ZVZhcmlhYmxlcygkdGVtcGxhdGUsICRub2RlKTsKCiAgICAgICAgJHRlbXBsYXRlLT5yZW5kZXJUbygkZmlsZSk7CiAgICB9CgogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHJlbmRlckl0ZW1zKEZpbGVOb2RlICRub2RlKTogc3RyaW5nCiAgICB7CiAgICAgICAgJHRlbXBsYXRlID0gbmV3IFxUZXh0X1RlbXBsYXRlKCR0aGlzLT50ZW1wbGF0ZVBhdGggLiAnZmlsZV9pdGVtLmh0bWwnLCAne3snLCAnfX0nKTsKCiAgICAgICAgJG1ldGhvZEl0ZW1UZW1wbGF0ZSA9IG5ldyBcVGV4dF9UZW1wbGF0ZSgKICAgICAgICAgICAgJHRoaXMtPnRlbXBsYXRlUGF0aCAuICdtZXRob2RfaXRlbS5odG1sJywKICAgICAgICAgICAgJ3t7JywKICAgICAgICAgICAgJ319JwogICAgICAgICk7CgogICAgICAgICRpdGVtcyA9ICR0aGlzLT5yZW5kZXJJdGVtVGVtcGxhdGUoCiAgICAgICAgICAgICR0ZW1wbGF0ZSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgJ25hbWUnICAgICAgICAgICAgICAgICAgICAgICAgID0+ICdUb3RhbCcsCiAgICAgICAgICAgICAgICAnbnVtQ2xhc3NlcycgICAgICAgICAgICAgICAgICAgPT4gJG5vZGUtPmdldE51bUNsYXNzZXNBbmRUcmFpdHMoKSwKICAgICAgICAgICAgICAgICdudW1UZXN0ZWRDbGFzc2VzJyAgICAgICAgICAgICA9PiAkbm9kZS0+Z2V0TnVtVGVzdGVkQ2xhc3Nlc0FuZFRyYWl0cygpLAogICAgICAgICAgICAgICAgJ251bU1ldGhvZHMnICAgICAgICAgICAgICAgICAgID0+ICRub2RlLT5nZXROdW1GdW5jdGlvbnNBbmRNZXRob2RzKCksCiAgICAgICAgICAgICAgICAnbnVtVGVzdGVkTWV0aG9kcycgICAgICAgICAgICAgPT4gJG5vZGUtPmdldE51bVRlc3RlZEZ1bmN0aW9uc0FuZE1ldGhvZHMoKSwKICAgICAgICAgICAgICAgICdsaW5lc0V4ZWN1dGVkUGVyY2VudCcgICAgICAgICA9PiAkbm9kZS0+Z2V0TGluZUV4ZWN1dGVkUGVyY2VudChmYWxzZSksCiAgICAgICAgICAgICAgICAnbGluZXNFeGVjdXRlZFBlcmNlbnRBc1N0cmluZycgPT4gJG5vZGUtPmdldExpbmVFeGVjdXRlZFBlcmNlbnQoKSwKICAgICAgICAgICAgICAgICdudW1FeGVjdXRlZExpbmVzJyAgICAgICAgICAgICA9PiAkbm9kZS0+Z2V0TnVtRXhlY3V0ZWRMaW5lcygpLAogICAgICAgICAgICAgICAgJ251bUV4ZWN1dGFibGVMaW5lcycgICAgICAgICAgID0+ICRub2RlLT5nZXROdW1FeGVjdXRhYmxlTGluZXMoKSwKICAgICAgICAgICAgICAgICd0ZXN0ZWRNZXRob2RzUGVyY2VudCcgICAgICAgICA9PiAkbm9kZS0+Z2V0VGVzdGVkRnVuY3Rpb25zQW5kTWV0aG9kc1BlcmNlbnQoZmFsc2UpLAogICAgICAgICAgICAgICAgJ3Rlc3RlZE1ldGhvZHNQZXJjZW50QXNTdHJpbmcnID0+ICRub2RlLT5nZXRUZXN0ZWRGdW5jdGlvbnNBbmRNZXRob2RzUGVyY2VudCgpLAogICAgICAgICAgICAgICAgJ3Rlc3RlZENsYXNzZXNQZXJjZW50JyAgICAgICAgID0+ICRub2RlLT5nZXRUZXN0ZWRDbGFzc2VzQW5kVHJhaXRzUGVyY2VudChmYWxzZSksCiAgICAgICAgICAgICAgICAndGVzdGVkQ2xhc3Nlc1BlcmNlbnRBc1N0cmluZycgPT4gJG5vZGUtPmdldFRlc3RlZENsYXNzZXNBbmRUcmFpdHNQZXJjZW50KCksCiAgICAgICAgICAgICAgICAnY3JhcCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJzxhYmJyIHRpdGxlPSJDaGFuZ2UgUmlzayBBbnRpLVBhdHRlcm5zIChDUkFQKSBJbmRleCI+Q1JBUDwvYWJicj4nLAogICAgICAgICAgICBdCiAgICAgICAgKTsKCiAgICAgICAgJGl0ZW1zIC49ICR0aGlzLT5yZW5kZXJGdW5jdGlvbkl0ZW1zKAogICAgICAgICAgICAkbm9kZS0+Z2V0RnVuY3Rpb25zKCksCiAgICAgICAgICAgICRtZXRob2RJdGVtVGVtcGxhdGUKICAgICAgICApOwoKICAgICAgICAkaXRlbXMgLj0gJHRoaXMtPnJlbmRlclRyYWl0T3JDbGFzc0l0ZW1zKAogICAgICAgICAgICAkbm9kZS0+Z2V0VHJhaXRzKCksCiAgICAgICAgICAgICR0ZW1wbGF0ZSwKICAgICAgICAgICAgJG1ldGhvZEl0ZW1UZW1wbGF0ZQogICAgICAgICk7CgogICAgICAgICRpdGVtcyAuPSAkdGhpcy0+cmVuZGVyVHJhaXRPckNsYXNzSXRlbXMoCiAgICAgICAgICAgICRub2RlLT5nZXRDbGFzc2VzKCksCiAgICAgICAgICAgICR0ZW1wbGF0ZSwKICAgICAgICAgICAgJG1ldGhvZEl0ZW1UZW1wbGF0ZQogICAgICAgICk7CgogICAgICAgIHJldHVybiAkaXRlbXM7CiAgICB9CgogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHJlbmRlclRyYWl0T3JDbGFzc0l0ZW1zKGFycmF5ICRpdGVtcywgXFRleHRfVGVtcGxhdGUgJHRlbXBsYXRlLCBcVGV4dF9UZW1wbGF0ZSAkbWV0aG9kSXRlbVRlbXBsYXRlKTogc3RyaW5nCiAgICB7CiAgICAgICAgJGJ1ZmZlciA9ICcnOwoKICAgICAgICBpZiAoZW1wdHkoJGl0ZW1zKSkgewogICAgICAgICAgICByZXR1cm4gJGJ1ZmZlcjsKICAgICAgICB9CgogICAgICAgIGZvcmVhY2ggKCRpdGVtcyBhcyAkbmFtZSA9PiAkaXRlbSkgewogICAgICAgICAgICAkbnVtTWV0aG9kcyAgICAgICA9IDA7CiAgICAgICAgICAgICRudW1UZXN0ZWRNZXRob2RzID0gMDsKCiAgICAgICAgICAgIGZvcmVhY2ggKCRpdGVtWydtZXRob2RzJ10gYXMgJG1ldGhvZCkgewogICAgICAgICAgICAgICAgaWYgKCRtZXRob2RbJ2V4ZWN1dGFibGVMaW5lcyddID4gMCkgewogICAgICAgICAgICAgICAgICAgICRudW1NZXRob2RzKys7CgogICAgICAgICAgICAgICAgICAgIGlmICgkbWV0aG9kWydleGVjdXRlZExpbmVzJ10gPT09ICRtZXRob2RbJ2V4ZWN1dGFibGVMaW5lcyddKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRudW1UZXN0ZWRNZXRob2RzKys7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJGl0ZW1bJ2V4ZWN1dGFibGVMaW5lcyddID4gMCkgewogICAgICAgICAgICAgICAgJG51bUNsYXNzZXMgICAgICAgICAgICAgICAgICAgPSAxOwogICAgICAgICAgICAgICAgJG51bVRlc3RlZENsYXNzZXMgICAgICAgICAgICAgPSAkbnVtVGVzdGVkTWV0aG9kcyA9PSAkbnVtTWV0aG9kcyA/IDEgOiAwOwogICAgICAgICAgICAgICAgJGxpbmVzRXhlY3V0ZWRQZXJjZW50QXNTdHJpbmcgPSBVdGlsOjpwZXJjZW50KAogICAgICAgICAgICAgICAgICAgICRpdGVtWydleGVjdXRlZExpbmVzJ10sCiAgICAgICAgICAgICAgICAgICAgJGl0ZW1bJ2V4ZWN1dGFibGVMaW5lcyddLAogICAgICAgICAgICAgICAgICAgIHRydWUKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkbnVtQ2xhc3NlcyAgICAgICAgICAgICAgICAgICA9ICduL2EnOwogICAgICAgICAgICAgICAgJG51bVRlc3RlZENsYXNzZXMgICAgICAgICAgICAgPSAnbi9hJzsKICAgICAgICAgICAgICAgICRsaW5lc0V4ZWN1dGVkUGVyY2VudEFzU3RyaW5nID0gJ24vYSc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRidWZmZXIgLj0gJHRoaXMtPnJlbmRlckl0ZW1UZW1wbGF0ZSgKICAgICAgICAgICAgICAgICR0ZW1wbGF0ZSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAnbmFtZScgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJHRoaXMtPmFiYnJldmlhdGVDbGFzc05hbWUoJG5hbWUpLAogICAgICAgICAgICAgICAgICAgICdudW1DbGFzc2VzJyAgICAgICAgICAgICAgICAgICA9PiAkbnVtQ2xhc3NlcywKICAgICAgICAgICAgICAgICAgICAnbnVtVGVzdGVkQ2xhc3NlcycgICAgICAgICAgICAgPT4gJG51bVRlc3RlZENsYXNzZXMsCiAgICAgICAgICAgICAgICAgICAgJ251bU1ldGhvZHMnICAgICAgICAgICAgICAgICAgID0+ICRudW1NZXRob2RzLAogICAgICAgICAgICAgICAgICAgICdudW1UZXN0ZWRNZXRob2RzJyAgICAgICAgICAgICA9PiAkbnVtVGVzdGVkTWV0aG9kcywKICAgICAgICAgICAgICAgICAgICAnbGluZXNFeGVjdXRlZFBlcmNlbnQnICAgICAgICAgPT4gVXRpbDo6cGVyY2VudCgKICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW1bJ2V4ZWN1dGVkTGluZXMnXSwKICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW1bJ2V4ZWN1dGFibGVMaW5lcyddLAogICAgICAgICAgICAgICAgICAgICAgICBmYWxzZQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgJ2xpbmVzRXhlY3V0ZWRQZXJjZW50QXNTdHJpbmcnID0+ICRsaW5lc0V4ZWN1dGVkUGVyY2VudEFzU3RyaW5nLAogICAgICAgICAgICAgICAgICAgICdudW1FeGVjdXRlZExpbmVzJyAgICAgICAgICAgICA9PiAkaXRlbVsnZXhlY3V0ZWRMaW5lcyddLAogICAgICAgICAgICAgICAgICAgICdudW1FeGVjdXRhYmxlTGluZXMnICAgICAgICAgICA9PiAkaXRlbVsnZXhlY3V0YWJsZUxpbmVzJ10sCiAgICAgICAgICAgICAgICAgICAgJ3Rlc3RlZE1ldGhvZHNQZXJjZW50JyAgICAgICAgID0+IFV0aWw6OnBlcmNlbnQoCiAgICAgICAgICAgICAgICAgICAgICAgICRudW1UZXN0ZWRNZXRob2RzLAogICAgICAgICAgICAgICAgICAgICAgICAkbnVtTWV0aG9kcwogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgJ3Rlc3RlZE1ldGhvZHNQZXJjZW50QXNTdHJpbmcnID0+IFV0aWw6OnBlcmNlbnQoCiAgICAgICAgICAgICAgICAgICAgICAgICRudW1UZXN0ZWRNZXRob2RzLAogICAgICAgICAgICAgICAgICAgICAgICAkbnVtTWV0aG9kcywKICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgJ3Rlc3RlZENsYXNzZXNQZXJjZW50JyAgICAgICAgID0+IFV0aWw6OnBlcmNlbnQoCiAgICAgICAgICAgICAgICAgICAgICAgICRudW1UZXN0ZWRNZXRob2RzID09ICRudW1NZXRob2RzID8gMSA6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICd0ZXN0ZWRDbGFzc2VzUGVyY2VudEFzU3RyaW5nJyA9PiBVdGlsOjpwZXJjZW50KAogICAgICAgICAgICAgICAgICAgICAgICAkbnVtVGVzdGVkTWV0aG9kcyA9PSAkbnVtTWV0aG9kcyA/IDEgOiAwLAogICAgICAgICAgICAgICAgICAgICAgICAxLAogICAgICAgICAgICAgICAgICAgICAgICB0cnVlCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAnY3JhcCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJGl0ZW1bJ2NyYXAnXSwKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgKTsKCiAgICAgICAgICAgIGZvcmVhY2ggKCRpdGVtWydtZXRob2RzJ10gYXMgJG1ldGhvZCkgewogICAgICAgICAgICAgICAgJGJ1ZmZlciAuPSAkdGhpcy0+cmVuZGVyRnVuY3Rpb25Pck1ldGhvZEl0ZW0oCiAgICAgICAgICAgICAgICAgICAgJG1ldGhvZEl0ZW1UZW1wbGF0ZSwKICAgICAgICAgICAgICAgICAgICAkbWV0aG9kLAogICAgICAgICAgICAgICAgICAgICcmbmJzcDsnCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJGJ1ZmZlcjsKICAgIH0KCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gcmVuZGVyRnVuY3Rpb25JdGVtcyhhcnJheSAkZnVuY3Rpb25zLCBcVGV4dF9UZW1wbGF0ZSAkdGVtcGxhdGUpOiBzdHJpbmcKICAgIHsKICAgICAgICBpZiAoZW1wdHkoJGZ1bmN0aW9ucykpIHsKICAgICAgICAgICAgcmV0dXJuICcnOwogICAgICAgIH0KCiAgICAgICAgJGJ1ZmZlciA9ICcnOwoKICAgICAgICBmb3JlYWNoICgkZnVuY3Rpb25zIGFzICRmdW5jdGlvbikgewogICAgICAgICAgICAkYnVmZmVyIC49ICR0aGlzLT5yZW5kZXJGdW5jdGlvbk9yTWV0aG9kSXRlbSgKICAgICAgICAgICAgICAgICR0ZW1wbGF0ZSwKICAgICAgICAgICAgICAgICRmdW5jdGlvbgogICAgICAgICAgICApOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRidWZmZXI7CiAgICB9CgogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHJlbmRlckZ1bmN0aW9uT3JNZXRob2RJdGVtKFxUZXh0X1RlbXBsYXRlICR0ZW1wbGF0ZSwgYXJyYXkgJGl0ZW0sIHN0cmluZyAkaW5kZW50ID0gJycpOiBzdHJpbmcKICAgIHsKICAgICAgICAkbnVtTWV0aG9kcyAgICAgICA9IDA7CiAgICAgICAgJG51bVRlc3RlZE1ldGhvZHMgPSAwOwoKICAgICAgICBpZiAoJGl0ZW1bJ2V4ZWN1dGFibGVMaW5lcyddID4gMCkgewogICAgICAgICAgICAkbnVtTWV0aG9kcyA9IDE7CgogICAgICAgICAgICBpZiAoJGl0ZW1bJ2V4ZWN1dGVkTGluZXMnXSA9PT0gJGl0ZW1bJ2V4ZWN1dGFibGVMaW5lcyddKSB7CiAgICAgICAgICAgICAgICAkbnVtVGVzdGVkTWV0aG9kcyA9IDE7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiAkdGhpcy0+cmVuZGVySXRlbVRlbXBsYXRlKAogICAgICAgICAgICAkdGVtcGxhdGUsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICduYW1lJyAgICAgICAgICAgICAgICAgICAgICAgICA9PiBcc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAnJXM8YSBocmVmPSIjJWQiPjxhYmJyIHRpdGxlPSIlcyI+JXM8L2FiYnI+PC9hPicsCiAgICAgICAgICAgICAgICAgICAgJGluZGVudCwKICAgICAgICAgICAgICAgICAgICAkaXRlbVsnc3RhcnRMaW5lJ10sCiAgICAgICAgICAgICAgICAgICAgXGh0bWxzcGVjaWFsY2hhcnMoJGl0ZW1bJ3NpZ25hdHVyZSddLCAkdGhpcy0+aHRtbFNwZWNpYWxDaGFyc0ZsYWdzKSwKICAgICAgICAgICAgICAgICAgICAkaXRlbVsnZnVuY3Rpb25OYW1lJ10gPz8gJGl0ZW1bJ21ldGhvZE5hbWUnXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICdudW1NZXRob2RzJyAgICAgICAgICAgICAgICAgICA9PiAkbnVtTWV0aG9kcywKICAgICAgICAgICAgICAgICdudW1UZXN0ZWRNZXRob2RzJyAgICAgICAgICAgICA9PiAkbnVtVGVzdGVkTWV0aG9kcywKICAgICAgICAgICAgICAgICdsaW5lc0V4ZWN1dGVkUGVyY2VudCcgICAgICAgICA9PiBVdGlsOjpwZXJjZW50KAogICAgICAgICAgICAgICAgICAgICRpdGVtWydleGVjdXRlZExpbmVzJ10sCiAgICAgICAgICAgICAgICAgICAgJGl0ZW1bJ2V4ZWN1dGFibGVMaW5lcyddCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgJ2xpbmVzRXhlY3V0ZWRQZXJjZW50QXNTdHJpbmcnID0+IFV0aWw6OnBlcmNlbnQoCiAgICAgICAgICAgICAgICAgICAgJGl0ZW1bJ2V4ZWN1dGVkTGluZXMnXSwKICAgICAgICAgICAgICAgICAgICAkaXRlbVsnZXhlY3V0YWJsZUxpbmVzJ10sCiAgICAgICAgICAgICAgICAgICAgdHJ1ZQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICdudW1FeGVjdXRlZExpbmVzJyAgICAgICAgICAgICA9PiAkaXRlbVsnZXhlY3V0ZWRMaW5lcyddLAogICAgICAgICAgICAgICAgJ251bUV4ZWN1dGFibGVMaW5lcycgICAgICAgICAgID0+ICRpdGVtWydleGVjdXRhYmxlTGluZXMnXSwKICAgICAgICAgICAgICAgICd0ZXN0ZWRNZXRob2RzUGVyY2VudCcgICAgICAgICA9PiBVdGlsOjpwZXJjZW50KAogICAgICAgICAgICAgICAgICAgICRudW1UZXN0ZWRNZXRob2RzLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAndGVzdGVkTWV0aG9kc1BlcmNlbnRBc1N0cmluZycgPT4gVXRpbDo6cGVyY2VudCgKICAgICAgICAgICAgICAgICAgICAkbnVtVGVzdGVkTWV0aG9kcywKICAgICAgICAgICAgICAgICAgICAxLAogICAgICAgICAgICAgICAgICAgIHRydWUKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAnY3JhcCcgICAgICAgICAgICAgICAgICAgICAgICAgPT4gJGl0ZW1bJ2NyYXAnXSwKICAgICAgICAgICAgXQogICAgICAgICk7CiAgICB9CgogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHJlbmRlclNvdXJjZShGaWxlTm9kZSAkbm9kZSk6IHN0cmluZwogICAgewogICAgICAgICRjb3ZlcmFnZURhdGEgPSAkbm9kZS0+Z2V0Q292ZXJhZ2VEYXRhKCk7CiAgICAgICAgJHRlc3REYXRhICAgICA9ICRub2RlLT5nZXRUZXN0RGF0YSgpOwogICAgICAgICRjb2RlTGluZXMgICAgPSAkdGhpcy0+bG9hZEZpbGUoJG5vZGUtPmdldFBhdGgoKSk7CiAgICAgICAgJGxpbmVzICAgICAgICA9ICcnOwogICAgICAgICRpICAgICAgICAgICAgPSAxOwoKICAgICAgICBmb3JlYWNoICgkY29kZUxpbmVzIGFzICRsaW5lKSB7CiAgICAgICAgICAgICR0ckNsYXNzICAgICAgICA9ICcnOwogICAgICAgICAgICAkcG9wb3ZlckNvbnRlbnQgPSAnJzsKICAgICAgICAgICAgJHBvcG92ZXJUaXRsZSAgID0gJyc7CgogICAgICAgICAgICBpZiAoXGFycmF5X2tleV9leGlzdHMoJGksICRjb3ZlcmFnZURhdGEpKSB7CiAgICAgICAgICAgICAgICAkbnVtVGVzdHMgPSAoJGNvdmVyYWdlRGF0YVskaV0gPyBcY291bnQoJGNvdmVyYWdlRGF0YVskaV0pIDogMCk7CgogICAgICAgICAgICAgICAgaWYgKCRjb3ZlcmFnZURhdGFbJGldID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgJHRyQ2xhc3MgPSAnIGNsYXNzPSJ3YXJuaW5nIic7CiAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJG51bVRlc3RzID09IDApIHsKICAgICAgICAgICAgICAgICAgICAkdHJDbGFzcyA9ICcgY2xhc3M9ImRhbmdlciInOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkbGluZUNzcyAgICAgICAgPSAnY292ZXJlZC1ieS1sYXJnZS10ZXN0cyc7CiAgICAgICAgICAgICAgICAgICAgJHBvcG92ZXJDb250ZW50ID0gJzx1bD4nOwoKICAgICAgICAgICAgICAgICAgICBpZiAoJG51bVRlc3RzID4gMSkgewogICAgICAgICAgICAgICAgICAgICAgICAkcG9wb3ZlclRpdGxlID0gJG51bVRlc3RzIC4gJyB0ZXN0cyBjb3ZlciBsaW5lICcgLiAkaTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAkcG9wb3ZlclRpdGxlID0gJzEgdGVzdCBjb3ZlcnMgbGluZSAnIC4gJGk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkY292ZXJhZ2VEYXRhWyRpXSBhcyAkdGVzdCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGxpbmVDc3MgPT0gJ2NvdmVyZWQtYnktbGFyZ2UtdGVzdHMnICYmICR0ZXN0RGF0YVskdGVzdF1bJ3NpemUnXSA9PSAnbWVkaXVtJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGxpbmVDc3MgPSAnY292ZXJlZC1ieS1tZWRpdW0tdGVzdHMnOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHRlc3REYXRhWyR0ZXN0XVsnc2l6ZSddID09ICdzbWFsbCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsaW5lQ3NzID0gJ2NvdmVyZWQtYnktc21hbGwtdGVzdHMnOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKCR0ZXN0RGF0YVskdGVzdF1bJ3N0YXR1cyddKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICgkdGVzdERhdGFbJHRlc3RdWydzaXplJ10pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnc21hbGwnOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRlc3RDU1MgPSAnIGNsYXNzPSJjb3ZlcmVkLWJ5LXNtYWxsLXRlc3RzIic7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdtZWRpdW0nOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRlc3RDU1MgPSAnIGNsYXNzPSJjb3ZlcmVkLWJ5LW1lZGl1bS10ZXN0cyInOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ZXN0Q1NTID0gJyBjbGFzcz0iY292ZXJlZC1ieS1sYXJnZS10ZXN0cyInOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ZXN0Q1NTID0gJyBjbGFzcz0id2FybmluZyInOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRlc3RDU1MgPSAnIGNsYXNzPSJkYW5nZXIiJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0ZXN0Q1NTID0gJyBjbGFzcz0iZGFuZ2VyIic7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRlc3RDU1MgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgJHBvcG92ZXJDb250ZW50IC49IFxzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxsaSVzPiVzPC9saT4nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHRlc3RDU1MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcaHRtbHNwZWNpYWxjaGFycygkdGVzdCwgJHRoaXMtPmh0bWxTcGVjaWFsQ2hhcnNGbGFncykKICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICRwb3BvdmVyQ29udGVudCAuPSAnPC91bD4nOwogICAgICAgICAgICAgICAgICAgICR0ckNsYXNzICAgICAgICAgPSAnIGNsYXNzPSInIC4gJGxpbmVDc3MgLiAnIHBvcGluIic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRwb3BvdmVyID0gJyc7CgogICAgICAgICAgICBpZiAoIWVtcHR5KCRwb3BvdmVyVGl0bGUpKSB7CiAgICAgICAgICAgICAgICAkcG9wb3ZlciA9IFxzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICcgZGF0YS10aXRsZT0iJXMiIGRhdGEtY29udGVudD0iJXMiIGRhdGEtcGxhY2VtZW50PSJ0b3AiIGRhdGEtaHRtbD0idHJ1ZSInLAogICAgICAgICAgICAgICAgICAgICRwb3BvdmVyVGl0bGUsCiAgICAgICAgICAgICAgICAgICAgXGh0bWxzcGVjaWFsY2hhcnMoJHBvcG92ZXJDb250ZW50LCAkdGhpcy0+aHRtbFNwZWNpYWxDaGFyc0ZsYWdzKQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJGxpbmVzIC49IFxzcHJpbnRmKAogICAgICAgICAgICAgICAgJyAgICAgPHRyJXM+PHRkJXM+PGRpdiBhbGlnbj0icmlnaHQiPjxhIG5hbWU9IiVkIj48L2E+PGEgaHJlZj0iIyVkIj4lZDwvYT48L2Rpdj48L3RkPjx0ZCBjbGFzcz0iY29kZUxpbmUiPiVzPC90ZD48L3RyPicgLiAiXG4iLAogICAgICAgICAgICAgICAgJHRyQ2xhc3MsCiAgICAgICAgICAgICAgICAkcG9wb3ZlciwKICAgICAgICAgICAgICAgICRpLAogICAgICAgICAgICAgICAgJGksCiAgICAgICAgICAgICAgICAkaSwKICAgICAgICAgICAgICAgICRsaW5lCiAgICAgICAgICAgICk7CgogICAgICAgICAgICAkaSsrOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRsaW5lczsKICAgIH0KCiAgICAvKioKICAgICAqIEBwYXJhbSBzdHJpbmcgJGZpbGUKICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIGxvYWRGaWxlKCRmaWxlKTogYXJyYXkKICAgIHsKICAgICAgICAkYnVmZmVyICAgICAgICAgICAgICA9IFxmaWxlX2dldF9jb250ZW50cygkZmlsZSk7CiAgICAgICAgJHRva2VucyAgICAgICAgICAgICAgPSBcdG9rZW5fZ2V0X2FsbCgkYnVmZmVyKTsKICAgICAgICAkcmVzdWx0ICAgICAgICAgICAgICA9IFsnJ107CiAgICAgICAgJGkgICAgICAgICAgICAgICAgICAgPSAwOwogICAgICAgICRzdHJpbmdGbGFnICAgICAgICAgID0gZmFsc2U7CiAgICAgICAgJGZpbGVFbmRzV2l0aE5ld0xpbmUgPSBcc3Vic3RyKCRidWZmZXIsIC0xKSA9PSAiXG4iOwoKICAgICAgICB1bnNldCgkYnVmZmVyKTsKCiAgICAgICAgZm9yZWFjaCAoJHRva2VucyBhcyAkaiA9PiAkdG9rZW4pIHsKICAgICAgICAgICAgaWYgKFxpc19zdHJpbmcoJHRva2VuKSkgewogICAgICAgICAgICAgICAgaWYgKCR0b2tlbiA9PT0gJyInICYmICR0b2tlbnNbJGogLSAxXSAhPT0gJ1xcJykgewogICAgICAgICAgICAgICAgICAgICRyZXN1bHRbJGldIC49IFxzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9InN0cmluZyI+JXM8L3NwYW4+JywKICAgICAgICAgICAgICAgICAgICAgICAgXGh0bWxzcGVjaWFsY2hhcnMoJHRva2VuLCAkdGhpcy0+aHRtbFNwZWNpYWxDaGFyc0ZsYWdzKQogICAgICAgICAgICAgICAgICAgICk7CgogICAgICAgICAgICAgICAgICAgICRzdHJpbmdGbGFnID0gISRzdHJpbmdGbGFnOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0WyRpXSAuPSBcc3ByaW50ZigKICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPSJrZXl3b3JkIj4lczwvc3Bhbj4nLAogICAgICAgICAgICAgICAgICAgICAgICBcaHRtbHNwZWNpYWxjaGFycygkdG9rZW4sICR0aGlzLT5odG1sU3BlY2lhbENoYXJzRmxhZ3MpCiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgWyR0b2tlbiwgJHZhbHVlXSA9ICR0b2tlbjsKCiAgICAgICAgICAgICR2YWx1ZSA9IFxzdHJfcmVwbGFjZSgKICAgICAgICAgICAgICAgIFsiXHQiLCAnICddLAogICAgICAgICAgICAgICAgWycmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsnLCAnJm5ic3A7J10sCiAgICAgICAgICAgICAgICBcaHRtbHNwZWNpYWxjaGFycygkdmFsdWUsICR0aGlzLT5odG1sU3BlY2lhbENoYXJzRmxhZ3MpCiAgICAgICAgICAgICk7CgogICAgICAgICAgICBpZiAoJHZhbHVlID09PSAiXG4iKSB7CiAgICAgICAgICAgICAgICAkcmVzdWx0WysrJGldID0gJyc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAkbGluZXMgPSBcZXhwbG9kZSgiXG4iLCAkdmFsdWUpOwoKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRsaW5lcyBhcyAkamogPT4gJGxpbmUpIHsKICAgICAgICAgICAgICAgICAgICAkbGluZSA9IFx0cmltKCRsaW5lKTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKCRsaW5lICE9PSAnJykgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHN0cmluZ0ZsYWcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb2xvdXIgPSAnc3RyaW5nJzsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoJHRva2VuKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9JTkxJTkVfSFRNTDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbG91ciA9ICdodG1sJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0NPTU1FTlQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9ET0NfQ09NTUVOVDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbG91ciA9ICdjb21tZW50JzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0FCU1RSQUNUOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfQVJSQVk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9BUzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0JSRUFLOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfQ0FMTEFCTEU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9DQVNFOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfQ0FUQ0g6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9DTEFTUzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0NMT05FOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfQ09OVElOVUU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9ERUZBVUxUOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfRUNITzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0VMU0U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FTFNFSUY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FTVBUWToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0VORERFQ0xBUkU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FTkRGT1I6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FTkRGT1JFQUNIOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfRU5ESUY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FTkRTV0lUQ0g6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FTkRXSElMRToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0VYSVQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9FWFRFTkRTOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfRklOQUw6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9GSU5BTExZOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfRk9SRUFDSDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0ZVTkNUSU9OOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfR0xPQkFMOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfSUY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9JTVBMRU1FTlRTOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfSU5DTFVERToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0lOQ0xVREVfT05DRToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0lOU1RBTkNFT0Y6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9JTlNURUFET0Y6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9JTlRFUkZBQ0U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9JU1NFVDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0xPR0lDQUxfQU5EOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfTE9HSUNBTF9PUjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX0xPR0lDQUxfWE9SOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfTkFNRVNQQUNFOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfTkVXOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfUFJJVkFURToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX1BST1RFQ1RFRDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX1BVQkxJQzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX1JFUVVJUkU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9SRVFVSVJFX09OQ0U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9SRVRVUk46CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9TVEFUSUM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9USFJPVzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX1RSQUlUOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfVFJZOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXFRfVU5TRVQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9VU0U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9WQVI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcVF9XSElMRToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFxUX1lJRUxEOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29sb3VyID0gJ2tleXdvcmQnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb2xvdXIgPSAnZGVmYXVsdCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICRyZXN1bHRbJGldIC49IFxzcHJpbnRmKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuIGNsYXNzPSIlcyI+JXM8L3NwYW4+JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb2xvdXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbGluZQogICAgICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRsaW5lc1skamogKyAxXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHJlc3VsdFsrKyRpXSA9ICcnOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKCRmaWxlRW5kc1dpdGhOZXdMaW5lKSB7CiAgICAgICAgICAgIHVuc2V0KCRyZXN1bHRbXGNvdW50KCRyZXN1bHQpIC0gMV0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRyZXN1bHQ7CiAgICB9CgogICAgcHJpdmF0ZSBmdW5jdGlvbiBhYmJyZXZpYXRlQ2xhc3NOYW1lKHN0cmluZyAkY2xhc3NOYW1lKTogc3RyaW5nCiAgICB7CiAgICAgICAgJHRtcCA9IFxleHBsb2RlKCdcXCcsICRjbGFzc05hbWUpOwoKICAgICAgICBpZiAoXGNvdW50KCR0bXApID4gMSkgewogICAgICAgICAgICAkY2xhc3NOYW1lID0gXHNwcmludGYoCiAgICAgICAgICAgICAgICAnPGFiYnIgdGl0bGU9IiVzIj4lczwvYWJicj4nLAogICAgICAgICAgICAgICAgJGNsYXNzTmFtZSwKICAgICAgICAgICAgICAgIFxhcnJheV9wb3AoJHRtcCkKICAgICAgICAgICAgKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkY2xhc3NOYW1lOwogICAgfQp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6NDM6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWwiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MzoiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcSHRtbCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjQ6Ikh0bWwiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czo0ODoiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcSHRtbFxGaWxlIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTE6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ4OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0OiJGaWxlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMDoiUmVuZGVycyBhIGZpbGUgbm9kZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6NDI6IlNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcSHRtbCI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6Mjp7czo4OiJGaWxlTm9kZSI7czo0MDoiU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXE5vZGVcRmlsZSI7czo0OiJVdGlsIjtzOjM1OiJTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcVXRpbCI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZmluYWwiO2I6MTtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTI6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcUmVuZGVyZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJSZW5kZXJlciI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YToxOntzOjcyOiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OiRodG1sU3BlY2lhbENoYXJzRmxhZ3MiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjg6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzI6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcRmlsZTo6JGh0bWxTcGVjaWFsQ2hhcnNGbGFncyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIxOiJodG1sU3BlY2lhbENoYXJzRmxhZ3MiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xWYXJfIjo0OntzOjE1OiIAKgB2YXJpYWJsZU5hbWUiO3M6MDoiIjtzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo3OiIAKgBuYW1lIjtzOjM6InZhciI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjoyNTtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7czo0NDoiXEVOVF9DT01QQVQgfCBcRU5UX0hUTUw0MDEgfCBcRU5UX1NVQlNUSVRVVEUiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjg6e3M6NTg6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcRmlsZTo6cmVuZGVyKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVGhyb3dzIjozOntzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXFJ1bnRpbWVFeGNlcHRpb24iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNjoiUnVudGltZUV4Y2VwdGlvbiI7fX1zOjc6IgAqAG5hbWUiO3M6NjoidGhyb3dzIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjI1O3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU4OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlcigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoicmVuZGVyIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjI6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6Im5vZGUiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MToiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxOb2RlXEZpbGUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0OiJGaWxlIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6ImZpbGUiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xWb2lkXyI6MDp7fX1zOjYzOiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlckl0ZW1zKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjM6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcRmlsZTo6cmVuZGVySXRlbXMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjExOiJyZW5kZXJJdGVtcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJub2RlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDE6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcTm9kZVxGaWxlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiRmlsZSI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e319czo3NToiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcSHRtbFxGaWxlOjpyZW5kZXJUcmFpdE9yQ2xhc3NJdGVtcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjc1OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlclRyYWl0T3JDbGFzc0l0ZW1zKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMzoicmVuZGVyVHJhaXRPckNsYXNzSXRlbXMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mzp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NToiaXRlbXMiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6InRlbXBsYXRlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTQ6IlxUZXh0X1RlbXBsYXRlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6IlRleHRfVGVtcGxhdGUiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToyO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MTg6Im1ldGhvZEl0ZW1UZW1wbGF0ZSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE0OiJcVGV4dF9UZW1wbGF0ZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJUZXh0X1RlbXBsYXRlIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjk0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fX1zOjcxOiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlckZ1bmN0aW9uSXRlbXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo3MToiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcSHRtbFxGaWxlOjpyZW5kZXJGdW5jdGlvbkl0ZW1zKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxOToicmVuZGVyRnVuY3Rpb25JdGVtcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToyOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo5OiJmdW5jdGlvbnMiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6InRlbXBsYXRlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MTQ6IlxUZXh0X1RlbXBsYXRlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTM6IlRleHRfVGVtcGxhdGUiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTgwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fX1zOjc4OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlckZ1bmN0aW9uT3JNZXRob2RJdGVtKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Nzg6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcRmlsZTo6cmVuZGVyRnVuY3Rpb25Pck1ldGhvZEl0ZW0oKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI2OiJyZW5kZXJGdW5jdGlvbk9yTWV0aG9kSXRlbSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTozOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo4OiJ0ZW1wbGF0ZSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjE0OiJcVGV4dF9UZW1wbGF0ZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJUZXh0X1RlbXBsYXRlIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjQ6Iml0ZW0iO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6ImluZGVudCI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IicnIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fX1zOjY0OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlclNvdXJjZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY0OiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OnJlbmRlclNvdXJjZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6InJlbmRlclNvdXJjZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJub2RlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDE6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcTm9kZVxGaWxlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiRmlsZSI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9fXM6NjA6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcRmlsZTo6bG9hZEZpbGUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo0OiJmaWxlIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MjU7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzY0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYwOiJcU2ViYXN0aWFuQmVyZ21hbm5cQ29kZUNvdmVyYWdlXFJlcG9ydFxIdG1sXEZpbGU6OmxvYWRGaWxlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJsb2FkRmlsZSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJmaWxlIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzY3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX19czo3MToiXFNlYmFzdGlhbkJlcmdtYW5uXENvZGVDb3ZlcmFnZVxSZXBvcnRcSHRtbFxGaWxlOjphYmJyZXZpYXRlQ2xhc3NOYW1lKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NzE6IlxTZWJhc3RpYW5CZXJnbWFublxDb2RlQ292ZXJhZ2VcUmVwb3J0XEh0bWxcRmlsZTo6YWJicmV2aWF0ZUNsYXNzTmFtZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6ImFiYnJldmlhdGVDbGFzc05hbWUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjk6ImNsYXNzTmFtZSI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1MTU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";