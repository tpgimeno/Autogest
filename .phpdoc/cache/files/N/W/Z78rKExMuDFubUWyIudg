1650932249
AwuilbDvXz%3A1e517d42253a2bf018e738c9a0907f55-196f83ca3923a08c46684c08b903023b
s:3824:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjE5NmY4M2NhMzkyM2EwOGM0NjY4NGMwOGI5MDMwMjNiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTI6IndvcmtmbG93LnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjYxOiJ2ZW5kb3Ivc3ltZm9ueS9mcmFtZXdvcmstYnVuZGxlL1Jlc291cmNlcy9jb25maWcvd29ya2Zsb3cucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxNzU1OiI8P3BocAoKLyoKICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFN5bWZvbnkgcGFja2FnZS4KICoKICogKGMpIEZhYmllbiBQb3RlbmNpZXIgPGZhYmllbkBzeW1mb255LmNvbT4KICoKICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UKICogZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuCiAqLwoKbmFtZXNwYWNlIFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvcjsKCnVzZSBTeW1mb255XENvbXBvbmVudFxXb3JrZmxvd1xFdmVudExpc3RlbmVyXEV4cHJlc3Npb25MYW5ndWFnZTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFdvcmtmbG93XE1hcmtpbmdTdG9yZVxNZXRob2RNYXJraW5nU3RvcmU7CnVzZSBTeW1mb255XENvbXBvbmVudFxXb3JrZmxvd1xSZWdpc3RyeTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFdvcmtmbG93XFN0YXRlTWFjaGluZTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XFdvcmtmbG93XFdvcmtmbG93OwoKcmV0dXJuIHN0YXRpYyBmdW5jdGlvbiAoQ29udGFpbmVyQ29uZmlndXJhdG9yICRjb250YWluZXIpIHsKICAgICRjb250YWluZXItPnNlcnZpY2VzKCkKICAgICAgICAtPnNldCgnd29ya2Zsb3cuYWJzdHJhY3QnLCBXb3JrZmxvdzo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ3dvcmtmbG93IGRlZmluaXRpb24nKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnbWFya2luZyBzdG9yZScpLAogICAgICAgICAgICAgICAgc2VydmljZSgnZXZlbnRfZGlzcGF0Y2hlcicpLT5pZ25vcmVPbkludmFsaWQoKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnd29ya2Zsb3cgbmFtZScpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdldmVudHMgdG8gZGlzcGF0Y2gnKSwKICAgICAgICAgICAgXSkKICAgICAgICAgICAgLT5hYnN0cmFjdCgpCiAgICAgICAgICAgIC0+cHVibGljKCkKICAgICAgICAtPnNldCgnc3RhdGVfbWFjaGluZS5hYnN0cmFjdCcsIFN0YXRlTWFjaGluZTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ3dvcmtmbG93IGRlZmluaXRpb24nKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnbWFya2luZyBzdG9yZScpLAogICAgICAgICAgICAgICAgc2VydmljZSgnZXZlbnRfZGlzcGF0Y2hlcicpLT5pZ25vcmVPbkludmFsaWQoKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygnd29ya2Zsb3cgbmFtZScpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdldmVudHMgdG8gZGlzcGF0Y2gnKSwKICAgICAgICAgICAgXSkKICAgICAgICAgICAgLT5hYnN0cmFjdCgpCiAgICAgICAgICAgIC0+cHVibGljKCkKICAgICAgICAtPnNldCgnd29ya2Zsb3cubWFya2luZ19zdG9yZS5tZXRob2QnLCBNZXRob2RNYXJraW5nU3RvcmU6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKICAgICAgICAtPnNldCgnd29ya2Zsb3cucmVnaXN0cnknLCBSZWdpc3RyeTo6Y2xhc3MpCiAgICAgICAgLT5hbGlhcyhSZWdpc3RyeTo6Y2xhc3MsICd3b3JrZmxvdy5yZWdpc3RyeScpCiAgICAgICAgLT5zZXQoJ3dvcmtmbG93LnNlY3VyaXR5LmV4cHJlc3Npb25fbGFuZ3VhZ2UnLCBFeHByZXNzaW9uTGFuZ3VhZ2U6OmNsYXNzKQogICAgOwp9OwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YToxOntzOjU4OiJcU3ltZm9ueVxDb21wb25lbnRcRGVwZW5kZW5jeUluamVjdGlvblxMb2FkZXJcQ29uZmlndXJhdG9yIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTg6IlxTeW1mb255XENvbXBvbmVudFxEZXBlbmRlbmN5SW5qZWN0aW9uXExvYWRlclxDb25maWd1cmF0b3IiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoiQ29uZmlndXJhdG9yIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";